package com.threeman.common.algorithm.search;

/**
 * @author songjing
 * @version 1.0
 * @date 2022/4/11 17:32
 * @描述 最好情况O(logN)
 * 最坏情况O(n)
 */
public class TreeSearch {
    /**
     * 二叉查找树 定义
     * 左子树小于根节点的值
     * 右子树大于根节点的值
     *
     * 中序遍历会从小到大排序
     *
     * 删除时，如果是叶子节点可直接删除
     * 如果是只有左子树，也可以子承父业
     * 如果既有左子树又有右子树
     * 则选择他的中序遍历的前驱节点或者后继节点代替
     */


    /**
     * 平衡二叉树
     *
     * 左右子树高度之差小于等于1
     * 左子树右子树也是平衡二叉树
     *
     * 平衡因子=左子树高度-右子树高度
     */
}
