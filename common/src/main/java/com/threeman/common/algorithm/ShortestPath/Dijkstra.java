package com.threeman.common.algorithm.ShortestPath;

/**
 * @author songjing
 * @version 1.0
 * @date 2022/4/11 15:30
 * @描述 迪杰斯特拉算法
 * 图的最短路径，寻找单源最短路径问题
 * @时间复杂度 O（n^2） 寻找所有顶点的最短路径则为O（n^3）
 */
public class Dijkstra {

    /**
     * 1. 初始化：先找出从原点V0到各终点Vk的直达路径，即通过一条弧到达（v0,vk）
     * 2. 选择: 从这些路径中找到一条长度最短的路径
     * 3. 更新：然后对其余各路径进行适当调整（如果能通过已有弧连接到终点，比直达弧更短，则调整为两段弧相加）va+vn<vk 则选va+vn（va为已有弧）
     * 以此类推
     */

    /**
     * 算法表格中
     * V（n+2）*n表格
     * 有路径则记录权重，无路径记为无穷大
     * 最后两行记录最小权重和该顶点
     */
}
